import numpy
import pickle
import math, sys
from pylab import *
from math import *
import ConfigParser
import matplotlib.pyplot as plt
from tempfile import TemporaryFile
from matplotlib import rc
rc('text', usetex=True)
rc('xtick', labelsize=30)
rc('ytick', labelsize=30)
rc('legend', fontsize=32)
t = numpy.arange(0, 1.01e10, 1e8)
SNR= numpy.arange(0,30, .5)
A = numpy.zeros(len(SNR))
B = numpy.zeros(len(SNR))
C = numpy.zeros(len(SNR))
D = numpy.zeros(len(SNR))
E = numpy.zeros(len(SNR))
F = numpy.zeros(len(SNR))
data1 = numpy.zeros(len(SNR))
data2 = numpy.zeros(len(SNR))
data3 = numpy.zeros(len(SNR))
data4 = numpy.zeros(len(SNR))
data5 = numpy.zeros(len(SNR))
data6 = numpy.zeros(len(SNR))
for q in range(len(t)):
    filename1 = 'lossy_BER_2_First_response multi mode_offset2 10m'+str(q+1)
    filename2 = 'lossy_BER_2_First_response multi mode_offset2 100m'+str(q+1)
    filename3 = 'lossy_BER_2_Higher_response multi mode_offset2 10m'+str(q+1)
    filename4 = 'lossy_BER_2_Higher_response multi mode_offset2 100m'+str(q+1)
    filename5 = 'lossy_BER_2_Higher_response multi mode_offset2 300m'+str(q+1)
    filename6 = 'lossy_BER_2_Higher_response multi mode_offset2 1km'+str(q+1)
    f1 = open(filename1,'r')
    f2 = open(filename2,'r')
    f3 = open(filename3,'r')
    f4 = open(filename4,'r')
    f5 = open(filename5,'r')
    f6 = open(filename6,'r')
    A = pickle.load(f1)
    B = pickle.load(f2)
    C = pickle.load(f3)
    D = pickle.load(f4)
    E = pickle.load(f5)
    F = pickle.load(f6)
    data1 =numpy.array(A)+numpy.array(data1)
    data2 = numpy.array(B)+numpy.array(data2)
    data3 = numpy.array(C)+numpy.array(data3)
    data4 = numpy.array(D)+numpy.array(data4)
    data5 = numpy.array(E)+numpy.array(data5)
    data6 = numpy.array(F)+numpy.array(data6)
    f1.close()
    f2.close()
    f3.close()
    f4.close()
    f5.close()
    f6.close()
plt.figure(figsize=(20,16))
matplotlib.rc('xtick', labelsize=40) 
matplotlib.rc('ytick', labelsize=40) 
plt.axis([0,29, 1e-6, 1e0])
ms = 20.0
markevery =5
lw = 5
plt.semilogy(SNR, data2/len(t), 'y-s',lw=5,ms=ms,markevery=markevery,label='First order( 100 m, 300 m, 1 km)',markeredgecolor='black',markeredgewidth=1)
plt.semilogy(SNR, data4/len(t), 'k-s',lw=5,ms=ms,markevery=markevery,label='100 m',markeredgecolor='black',markeredgewidth=1)
plt.semilogy(SNR, data5/len(t), 'm-^',lw=5,ms=ms,markevery=markevery,label='300 m',markeredgecolor='black',markeredgewidth=1)
plt.semilogy(SNR, data6/len(t), 'b-o',lw=5,ms=ms,markevery=markevery,label='1 km',markeredgecolor='black',markeredgewidth=1)
plt.xlabel(r'\text{SNR} (dB)',fontsize = 30)
plt.ylabel(r'\text{Bit Error Rate}', fontsize = 30)
plt.grid(True)
plt.legend(loc = 'lower left',numpoints=1)
plt.show()
